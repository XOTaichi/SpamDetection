{
    "headers": "Return-Path: <exmh-users-admin@example.com>\nDelivered-To: yyyy@localhost.example.com\nReceived: from localhost (jalapeno [127.0.0.1])\tby jmason.org (Postfix) with ESMTP id 8801916F03\tfor <jm@localhost>; Mon, 30 Sep 2002 10:45:19 +0100 (IST)\nReceived: from jalapeno [127.0.0.1]\tby localhost with IMAP (fetchmail-5.9.0)\tfor jm@localhost (single-drop); Mon, 30 Sep 2002 10:45:19 +0100 (IST)\nReceived: from listman.example.com (listman.example.com [66.187.233.211]) by    dogma.slashnull.org (8.11.6/8.11.6) with ESMTP id g8RCk1g09597 for    <jm-exmh@jmason.org>; Fri, 27 Sep 2002 13:46:05 +0100\nReceived: from listman.example.com (localhost.localdomain [127.0.0.1]) by    listman.redhat.com (Postfix) with ESMTP id DA41F3F80A; Fri, 27 Sep 2002    08:46:25 -0400 (EDT)\nDelivered-To: exmh-users@listman.example.com\nReceived: from int-mx1.corp.example.com (int-mx1.corp.example.com    [172.16.52.254]) by listman.redhat.com (Postfix) with ESMTP id 15C2C3FC41    for <exmh-users@listman.redhat.com>; Fri, 27 Sep 2002 08:44:02 -0400 (EDT)\nReceived: (from mail@localhost) by int-mx1.corp.example.com (8.11.6/8.11.6)    id g8RCi1218084 for exmh-users@listman.redhat.com; Fri, 27 Sep 2002    08:44:01 -0400\nReceived: from mx1.example.com (mx1.example.com [172.16.48.31]) by    int-mx1.corp.redhat.com (8.11.6/8.11.6) with SMTP id g8RCi1f18071 for    <exmh-users@redhat.com>; Fri, 27 Sep 2002 08:44:01 -0400\nReceived: from cft.snafu.priv.at (outerworld.snafu.priv.at    [193.80.224.65]) by mx1.redhat.com (8.11.6/8.11.6) with SMTP id    g8RCPji32603 for <exmh-users@redhat.com>; Fri, 27 Sep 2002 08:25:46 -0400\nReceived: from cft.snafu.priv.at (localhost [127.0.0.1]) by    cft.snafu.priv.at (8.12.3/8.12.3/Debian -4) with ESMTP id g8RCheOA016820    (version=TLSv1/SSLv3 cipher=EDH-RSA-DES-CBC3-SHA bits=168 verify=OK);    Fri, 27 Sep 2002 14:43:41 +0200\nReceived: (from az@localhost) by cft.snafu.priv.at (8.12.3/8.12.3/Debian    -4) id g8RCgfWq015740; Fri, 27 Sep 2002 14:42:41 +0200\nMessage-Id: <200209271242.g8RCgfWq015740@cft.snafu.priv.at>\nTo: exmh-users@example.com\nSubject: exmh and pgp: support for external passphrase cache (+patch)\nFrom: Alexander Zangerl <az@snafu.priv.at>\nCc: welch@panasas.com\nMIME-Version: 1.0\nContent-Type: multipart/signed; boundary=\"----------=_1033130560-1199-5\"; micalg=\"pgp-sha1\"; protocol=\"application/pgp-signature\"\nX-Loop: exmh-users@example.com\nSender: exmh-users-admin@example.com\nErrors-To: exmh-users-admin@example.com\nX-Beenthere: exmh-users@example.com\nX-Mailman-Version: 2.0.1\nPrecedence: bulk\nReply-To: exmh-users@example.com\nList-Help: <mailto:exmh-users-request@example.com?subject=help>\nList-Post: <mailto:exmh-users@example.com>\nList-Subscribe: <https://listman.example.com/mailman/listinfo/exmh-users>,    <mailto:exmh-users-request@redhat.com?subject=subscribe>\nList-Id: Discussion list for EXMH users <exmh-users.example.com>\nList-Unsubscribe: <https://listman.example.com/mailman/listinfo/exmh-users>,    <mailto:exmh-users-request@redhat.com?subject=unsubscribe>\nList-Archive: <https://listman.example.com/mailman/private/exmh-users/>\nDate: Fri, 27 Sep 2002 14:42:27 +0200\nX-Spam-Status: No, hits=0.6 required=5.0\ttests=KNOWN_MAILING_LIST,T_URI_COUNT_1_2,X_LOOP\tversion=2.50-cvs\nX-Spam-Level: ",
    "subject": "exmh and pgp: support for external passphrase cache (+patch)",
    "body": "i'm a very happy user of exmh, but i'm paranoid also :-)\ntherefore i'm not too happy with exmh caching my pgp passphrases.\nusually i use a relatively secure tool called 'quintuple agent' \n<URL:> to store my passphrases,\nand i've just added the few lines of code to exmh which allow for such\nexternal caches.\nthe patch is attached, it is against version 2.5-1 (debian), and the\nfiles modified are extrasInit.tcl and pgpExec.tcl.\ni've added three new preferences in the 'general pgp' section, which\nallow everybody to use his/her favourite external tool to get the\npassphrase (everything which spits out the phrase on stdout is ok).\ni'd be happy if somebody with cvs access thinks that this stuff \nis worth to be added and does so; apart from that i'm happy for \nsuggestions, comments or critique (mind you, i'm not exactly a special \nfriend of tcl so my code may leave things to be desired...)\nregards\naz\n--- /usr/lib/exmh/extrasInit.tcl\tSat Mar 2 17:26:38 2002\n+++ ./extrasInit.tcl\tFri Sep 27 14:22:13 2002\n@@ -642,6 +642,18 @@\n {pgp(passtimeout) pgpPassTimeout 60 {Minutes to cache PGP passphrase}\n \"Exmh will clear its memory of PGP passphrases after\n this time period, in minutes, has elapsed.\" }\n+{pgp(extpass) pgpExtPass OFF {Use external passphrase cache}\n+\"If this is enabled, then exmh will use an external program to retrieve \n+your passphrase when needed. pgpKeepPass and pgpPassTimeout will \n+be ignored.\"}\n+{pgp(getextcmd) pgpGetExtCmd {/usr/bin/q-client get %s} {Method to query external passphrase cache}\n+\"This external program is used to retrieve the passphrase for your key,\n+if pgpExtPass is active. The passphrase is expected on stdout.\n+The key id is substituted with %s (using format).\" }\n+{pgp(delextcmd) pgpDelExtCmd {/usr/bin/q-client delete %s} {Method to invalidate external passphrase cache}\n+\"This external program is used to delete the passphrase for your key\n+from the external cache, if pgpExtPass is active. \n+The key id is substituted with %s (using format).\" }\n }\n \n # Make sure we don't inherit a bad pgp(version) from a previous setup\n--- /usr/lib/exmh/pgpExec.tcl\tSat Mar 2 17:26:39 2002\n+++ ./pgpExec.tcl\tFri Sep 27 14:19:40 2002\n@@ -647,6 +647,33 @@\n proc Pgp_GetPass { v key } {\n global pgp\n \n+ if {[info exists pgp(extpass)] && [set pgp(extpass)] \\\n+\t && [info exists pgp(getextcmd)]} {\n+\tExmh_Debug \"Pgp_GetPass $v $key external\"\n+\tset keyid [lindex $key 0]\n+\tset cmd [format $pgp(getextcmd) $keyid]\n+\twhile (1) {\n+\t Exmh_Debug \"running cmd $cmd\"\n+\t if [ catch {exec sh -c \"$cmd\"} result ] {\n+\t\tExmh_Debug \"error running cmd: $result\"\n+\t\tExmh_Status \"Error executing external cmd\" warn\n+\t\treturn {}\n+\t } else {\n+\t\tif {[Pgp_Exec_CheckPassword $v $result $key]} {\n+\t\t return $result\n+\t\t} else {\n+\t\t Exmh_Debug \"bad passphrase\"\n+\t\t if {[info exists pgp(delextcmd)]} {\n+\t\t\tExmh_Debug \"trying to invalidate bad passphrase\"\n+\t\t\tif [catch {exec sh -c \"[format $pgp(delextcmd) $keyid]\"}] {\n+\t\t\t Exmh_Debug \"invalidation failed\"\n+\t\t\t return {}\n+\t\t\t}\n+\t\t }\n+\t\t}\n+\t }\n+\t}\n+ } else {\n Exmh_Debug \"Pgp_GetPass $v $key\"\n \n if {[lsearch -glob [set pgp($v,privatekeys)] \"[lindex $key 0]*\"] < 0} {\n@@ -695,6 +722,7 @@\n }\n return $password\n }\n+\t}\n }\n }\n \n-- \n+ Alexander Zangerl + az@snafu.priv.at + DSA 42BD645D + (RSA 5B586291)\nKind of like my 404K fund, \"wealth not found.\" -- shrox\n",
    "urls": [
        "http://www.vibe.at/tools/secret-agent/"
    ]
}