{
    "headers": "Return-Path: <rssfeeds@example.com>\nDelivered-To: yyyy@localhost.example.com\nReceived: from localhost (jalapeno [127.0.0.1])\tby jmason.org (Postfix) with ESMTP id 411AD16F18\tfor <jm@localhost>; Mon,  7 Oct 2002 12:03:42 +0100 (IST)\nReceived: from jalapeno [127.0.0.1]\tby localhost with IMAP (fetchmail-5.9.0)\tfor jm@localhost (single-drop); Mon, 07 Oct 2002 12:03:42 +0100 (IST)\nReceived: from dogma.slashnull.org (localhost [127.0.0.1]) by    dogma.slashnull.org (8.11.6/8.11.6) with ESMTP id g9780gK23266 for    <jm@jmason.org>; Mon, 7 Oct 2002 09:00:42 +0100\nMessage-Id: <200210070800.g9780gK23266@dogma.slashnull.org>\nTo: yyyy@example.com\nFrom: gamasutra <rssfeeds@example.com>\nSubject: GDC 2002: Game Scripting in Python\nDate: Mon, 07 Oct 2002 08:00:42 -0000\nContent-Type: text/plain; encoding=\"utf-8\"\nX-Spam-Status: No, hits=-917.6 required=5.0\ttests=AWL,DATE_IN_PAST_03_06,T_NONSENSE_FROM_40_50\tversion=2.50-cvs\nX-Spam-Level: ",
    "subject": "GDC 2002: Game Scripting in Python",
    "body": "URL: \nDate: 2002-10-06T18:12:51+01:00\nScripting languages allow rapid development of game behavior without the \npitfalls that await the unwary C++ programmer. Using an existing scripting \nlanguage saves the time and cost of developing a custom language, and typically \ngives you a far more powerful language than you could create on your own. \nPython is an excellent choice for a game scripting language because it is \npowerful, easily embedded, can seamlessly be extended with C/C++ code\n",
    "urls": [
        "http://www.newsisfree.com/click/-0,8613669,159/"
    ]
}