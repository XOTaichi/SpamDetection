{
    "headers": "Return-Path: <rssfeeds@example.com>\nDelivered-To: yyyy@localhost.example.com\nReceived: from localhost (jalapeno [127.0.0.1])\tby jmason.org (Postfix) with ESMTP id 2E0D516F6E\tfor <jm@localhost>; Thu, 26 Sep 2002 16:42:35 +0100 (IST)\nReceived: from jalapeno [127.0.0.1]\tby localhost with IMAP (fetchmail-5.9.0)\tfor jm@localhost (single-drop); Thu, 26 Sep 2002 16:42:35 +0100 (IST)\nReceived: from dogma.slashnull.org (localhost [127.0.0.1]) by    dogma.slashnull.org (8.11.6/8.11.6) with ESMTP id g8QFTTg24676 for    <jm@jmason.org>; Thu, 26 Sep 2002 16:29:29 +0100\nMessage-Id: <200209261529.g8QFTTg24676@dogma.slashnull.org>\nTo: yyyy@example.com\nFrom: guardian <rssfeeds@example.com>\nSubject: GDC 2002: Game Scripting in Python\nDate: Thu, 26 Sep 2002 15:29:29 -0000\nContent-Type: text/plain; encoding=\"utf-8\"\nX-Spam-Status: No, hits=0.0 required=5.0\ttests=AWL\tversion=2.50-cvs\nX-Spam-Level: ",
    "subject": "GDC 2002: Game Scripting in Python",
    "body": "URL: \nDate: 2002-08-22T03:21:04+01:00\nScripting languages allow rapid development of game behavior without the \npitfalls that await the unwary C++ programmer. Using an existing scripting \nlanguage saves the time and cost of developing a custom language, and typically \ngives you a far more powerful language than you could create on your own. \nPython is an excellent choice for a game scripting language because it is \npowerful, easily embedded, can seamlessly be extended with C/C++ code\n",
    "urls": [
        "http://www.newsisfree.com/click/-4,7132396,159/"
    ]
}