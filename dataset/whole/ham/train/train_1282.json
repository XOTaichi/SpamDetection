{
    "headers": "Return-Path: tim.one@comcast.net\nDelivery-Date: Fri Sep  6 17:55:07 2002\nFrom: tim.one@comcast.net\nDate: Fri, 06 Sep 2002 12:55:07 -0400\nSubject: [Spambayes] test sets?\nIn-Reply-To: <200209060811.g868Bo904031@localhost.localdomain>\nMessage-ID: <LNBBLJKPBEHFEDALKOLCEEIEBCAB.tim.one@comcast.net>",
    "subject": "[Spambayes] test sets?",
    "body": "[Anthony Baxter]\n> The other thing on my todo list (probably tonight's tram ride home) is\n> to add all headers from non-text parts of multipart messages. If nothing\n> else, it'll pick up most virus email real quick.\nSee the checkin comments for timtest.py last night. Adding this code gave a\nmajor reduction in the false negative rate:\ndef crack_content_xyz(msg):\n x = msg.get_type()\n if x is not None:\n yield 'content-type:' + x.lower()\n x = msg.get_param('type')\n if x is not None:\n yield 'content-type/type:' + x.lower()\n for x in msg.get_charsets(None):\n if x is not None:\n yield 'charset:' + x.lower()\n x = msg.get('content-disposition')\n if x is not None:\n yield 'content-disposition:' + x.lower()\n fname = msg.get_filename()\n if fname is not None:\n for x in fname.lower().split('/'):\n for y in x.split('.'):\n yield 'filename:' + y\n x = msg.get('content-transfer-encoding:')\n if x is not None:\n yield 'content-transfer-encoding:' + x.lower()\n...\n t = ''\n for x in msg.walk():\n for w in crack_content_xyz(x):\n yield t + w\n t = '>'\nI *suspect* most of that stuff didn't make any difference, but I put it all\nin as one blob so don't know which parts did and didn't help.\n",
    "urls": []
}