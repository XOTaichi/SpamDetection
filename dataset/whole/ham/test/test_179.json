{
    "headers": "Return-Path: <fork-admin@xent.com>\nDelivered-To: yyyy@localhost.netnoteinc.com\nReceived: from localhost (localhost [127.0.0.1])\tby phobos.labs.netnoteinc.com (Postfix) with ESMTP id A52A143F99\tfor <jm@localhost>; Wed, 28 Aug 2002 13:28:06 -0400 (EDT)\nReceived: from phobos [127.0.0.1]\tby localhost with IMAP (fetchmail-5.9.0)\tfor jm@localhost (single-drop); Wed, 28 Aug 2002 18:28:06 +0100 (IST)\nReceived: from xent.com ([64.161.22.236]) by dogma.slashnull.org    (8.11.6/8.11.6) with ESMTP id g7SHLxZ02684 for <jm@jmason.org>;    Wed, 28 Aug 2002 18:22:13 +0100\nReceived: from lair.xent.com (localhost [127.0.0.1]) by xent.com (Postfix)    with ESMTP id 631EE29422C; Wed, 28 Aug 2002 10:19:10 -0700 (PDT)\nDelivered-To: fork@example.com\nReceived: from jamesr.best.vwh.net (jamesr.best.vwh.net [192.220.76.165])    by xent.com (Postfix) with SMTP id 81DA529409A for <fork@xent.com>;    Wed, 28 Aug 2002 10:18:35 -0700 (PDT)\nReceived: (qmail 53311 invoked by uid 19621); 28 Aug 2002 17:20:03 -0000\nReceived: from unknown (HELO avalon) ([64.125.200.18]) (envelope-sender    <jamesr@best.com>) by 192.220.76.165 (qmail-ldap-1.03) with SMTP for    <fork@xent.com>; 28 Aug 2002 17:20:03 -0000\nSubject: Re: Java is for kiddies\nFrom: James Rogers <jamesr@best.com>\nTo: fork@example.com\nIn-Reply-To: <3D6BA1A1.90306@barrera.org>\nReferences: <Pine.LNX.4.33.0208270202170.7689-100000@watcher.mithral.com>    <3D6BA1A1.90306@barrera.org>\nContent-Type: text/plain\nContent-Transfer-Encoding: 7bit\nX-Mailer: Evolution/1.0.2-5mdk\nMessage-Id: <1030556128.7585.29.camel@avalon>\nMIME-Version: 1.0\nSender: fork-admin@xent.com\nErrors-To: fork-admin@xent.com\nX-Beenthere: fork@example.com\nX-Mailman-Version: 2.0.11\nPrecedence: bulk\nList-Help: <mailto:fork-request@xent.com?subject=help>\nList-Post: <mailto:fork@example.com>\nList-Subscribe: <http://xent.com/mailman/listinfo/fork>, <mailto:fork-request@xent.com?subject=subscribe>\nList-Id: Friends of Rohit Khare <fork.xent.com>\nList-Unsubscribe: <http://xent.com/mailman/listinfo/fork>,    <mailto:fork-request@xent.com?subject=unsubscribe>\nList-Archive: <http://xent.com/pipermail/fork/>\nDate: Wed, 28 Aug 2002 10:35:27 -0700\nX-Pyzor: Reported 0 times.\nX-Spam-Status: No, hits=-8.1 required=7.0\ttests=IN_REP_TO,KNOWN_MAILING_LIST,REFERENCES,SPAM_PHRASE_02_03\tversion=2.40-cvs\nX-Spam-Level: ",
    "subject": "Re: Java is for kiddies",
    "body": "On Tue, 2002-08-27 at 08:58, Joseph S. Barrera III wrote:\n>\n> C is more reliable than Java??\nBoth are reliable. \"Reliability\" is more a function of the software\nengineer. I've written complicated mission-critical server software in\nJava that will run without a hiccup as long as the Unix box it is\nsitting on is running. Same with C. For processes that are running\nmonths at a time, and in my case constantly touching databases and doing\nlots of low-level network stuff, reliability is obtained by making sure\nevery conceivable problem (and problems you didn't conceive of) recovers\nto a clean/safe process state so that things keep running i.e. it is a\ndesign/programming issue.\nThat said, we usually prototype serious systems in Java and then\nre-implement them in C if we have time. Java doesn't scale well as a\nlanguage for server apps, though not for the reasons usually offered. \nThe problem is that for high-end server apps, you really need fairly\ndetailed and low-level control of system resources to get around\nbottlenecks that show up relatively quickly in languages that don't give\nyou access to it. You can squeeze several times the performance out of\na C server program than a Java one simply by being able to finely tune\n(or more frequently, bypass) the system resource management. \nNonetheless, this is not a significant factor for most applications you\ncould conceivably develop in either language, as most aren't limited by\nraw performance scalability.\n-James Rogers\n jamesr@best.com\n",
    "urls": []
}