{
    "headers": "Return-Path: <fork-admin@xent.com>\nDelivered-To: yyyy@localhost.example.com\nReceived: from localhost (unknown [127.0.0.1])\tby jmason.org (Postfix) with ESMTP id 43BD516F2F\tfor <jm@localhost>; Mon,  2 Sep 2002 23:01:11 +0100 (IST)\nReceived: from jalapeno [127.0.0.1]\tby localhost with IMAP (fetchmail-5.9.0)\tfor jm@localhost (single-drop); Mon, 02 Sep 2002 23:01:11 +0100 (IST)\nReceived: from xent.com ([64.161.22.236]) by dogma.slashnull.org    (8.11.6/8.11.6) with ESMTP id g82IpqZ17406 for <jm@jmason.org>;    Mon, 2 Sep 2002 19:51:54 +0100\nReceived: from lair.xent.com (localhost [127.0.0.1]) by xent.com (Postfix)    with ESMTP id 20F252940D3; Mon,  2 Sep 2002 11:49:02 -0700 (PDT)\nDelivered-To: fork@example.com\nReceived: from mojo-jojo.ebuilt.net (mojo-jojo.ebuilt.net [209.216.43.10])    by xent.com (Postfix) with SMTP id EB39B294099 for <fork@xent.com>;    Mon,  2 Sep 2002 11:48:31 -0700 (PDT)\nReceived: (qmail 23025 invoked from network); 2 Sep 2002 18:50:55 -0000\nReceived: from nat.ebuilt.com (HELO thedudebvi1wob) (209.216.46.200) by    mojo-jojo.ebuilt.net with SMTP; 2 Sep 2002 18:50:55 -0000\nReply-To: rbfar@ebuilt.com\nFrom: \"Reza B'Far (eBuilt)\" <rbfar@ebuilt.com>\nTo: Robert Harley <harley@argote.ch>, fork@example.com\nSubject: RE: Java is for kiddies\nMessage-Id: <NCBBJMBPOKEEKDAILFNGIEBMFEAA.rbfar@ebuilt.com>\nMIME-Version: 1.0\nContent-Type: text/plain; charset=\"iso-8859-1\"\nContent-Transfer-Encoding: 7bit\nX-Priority: 3 (Normal)\nX-Msmail-Priority: Normal\nX-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2910.0)\nImportance: Normal\nX-Mimeole: Produced By Microsoft MimeOLE V5.50.4522.1200\nIn-Reply-To: <20020902095455.EDC5CC44D@argote.ch>\nSender: fork-admin@xent.com\nErrors-To: fork-admin@xent.com\nX-Beenthere: fork@example.com\nX-Mailman-Version: 2.0.11\nPrecedence: bulk\nList-Help: <mailto:fork-request@xent.com?subject=help>\nList-Post: <mailto:fork@example.com>\nList-Subscribe: <http://xent.com/mailman/listinfo/fork>, <mailto:fork-request@xent.com?subject=subscribe>\nList-Id: Friends of Rohit Khare <fork.xent.com>\nList-Unsubscribe: <http://xent.com/mailman/listinfo/fork>,    <mailto:fork-request@xent.com?subject=unsubscribe>\nList-Archive: <http://xent.com/pipermail/fork/>\nDate: Mon, 02 Sep 2002 11:48:36 -0700\nX-Spam-Status: No, hits=-7.5 required=7.0\ttests=AWL,IN_REP_TO,KNOWN_MAILING_LIST,SPAM_PHRASE_02_03,\t      USER_AGENT_OUTLOOK\tversion=2.40-cvs\nX-Spam-Level: ",
    "subject": "RE: Java is for kiddies",
    "body": "\n-----Original Message-----\nFrom: fork-admin@xent.com [mailto:fork-admin@xent.com]On Behalf Of\nRobert Harley\nSent: Monday, September 02, 2002 2:55 AM\nTo: fork@example.com\nSubject: RE: Java is for kiddies\nReza B'Far wrote:\n>This thread kind of surprises me... I started coding with C, then C++, and\n>moved on to Java... And, I think that:\nRobert Harley wrote:\n>Looks like a case of \"MY experience is comprehensive, YOUR'S is\n>anecdotal, THEY don't know what they're talking about\".\nWell, I sure don't claim that... I think most people on Fork probably have\nmore programming knowledge than I do... There's lots of experience out\nhere...\nReza B'Far wrote:\n>1. The people who pay the wages don't give a flyin' heck what programming\n>language you write things in... they just want it to work.\nRobert Harley wrote:\n>In my experience, they do care. It has to work certainly, and in\n>particular it has to work with what they've already got, and it has to\n>work on client's systems.\n>My limited experience of Java started a few years ago when support on\n>Linux was so terrible that I ran away screaming and haven't come back yet.\nWell, I think until recently, support for most things on Linux was kind of\nshady... Things have got much better... You're right in that the JDK used to\nsuck on Linux... But then, IMHO, Linux is still maturing.... or at least\ndevelopment tools for Linux are maturing... I've been developing a few\nserver side apps that run on Linux recently with JDK 1.3.x and they've had\nno problems with great performance.\nRobert Harley worte:\n>Microsoft has announced that they plan to remove Java from Windows.\n>They took it out of XP already and it has to be installed with a\n>service pack. Somehow, I can't imagine them removing the ability to\n>run C programs.\nHmmm... Do you really think that MS is pulling out Java because it's a \"Bad\"\nprogramming language or application platform? You don't think this has\nanything to do with .NET being a competitor to Java do you? Or that MS has\nbasically copied Java (with some additional features) and called it C#?\nIsn't that alone an indication that they actually DO think that a VM is the\nright way to go for most high level applications?\nReza B'Far wrote:\n>2. C and C++ forces the developer to solve problems such as memory\n>management over and over again.\nRobert Harley wrote:\n>Can't say I spend any noticeable amount of time on memory management\n>issues, apart from the fact that I frequently need > 4 GB.\nHmmm again.... You're telling me that you've never had a nasty bug that took\nyou a couple of days to track down that had to do with a memory leak? I am\nnot the best C/C++ programmer... not even close... But I've known really\ngood ones... and even they have nasty bugs that have to do with memory\nmanagement, however occasional they may be.\n>It's about design patterns, architecture, high level stuff...\nRobert Harley wrote:\n>If your problem just requires application of a \"design pattern\" to solve,\n>then it's trivial anyway irrespective of language.\nWow! So you're telling me that unless the application involves\nbit-counting, it's trivial? What about the application itself? What about\nhigh level problems such as task distribution, work-flow, etc.? Aren't most\nhigh level problems solved with high level solutions like design patterns?\nOr do you solve high level problems by writing optimal C/C++ code? For\nexample, do you think that most people working on collaboration frameworks\n(there are lots of them on this list), are working on writing an operating\nsystem with assembly that provides for a collaborative environment?\n>I am amazed by the amount of time wasted by people talking about low\n>level problems that have been solved 10 million times over and over\n>and over again...\nRobert Harley wrote:\n>You appear to be gratuitously asserting that C programmers waste time\n>on irrelevant low-level problems and Java programmers don't. Depends\n>entirely on the programmer, not the language.\nI can see how you could infer this. However, what I believe to really be the\ncase is that Java is one of the best languages for writing large\napplications with many components that involves the collaboration of more\nthan three programmers. In those cases, it's always very hard to get the\nprogrammers to agree on API's, memory management techniques, etc. With\nJava, the JCP takes care of the discussions so that you don't sit around in\na long meeting trying to decide what API to use to hook up to a database\n(JDBC) or a messaging bus (JMS).\n>3. Java is not just a programming language! It's also a platform...\nRobert Harley wrote:\n>Buzzword.\nYIKES! Have you written db code with C/C++ for different databases (just an\nexample)? Tried porting a persistence layer from Windows to Unix? Say you\nhave Informix running on Solaris and you want to port to Windows with MS SQL\n(bad idea...but for the sake of the example), would you rather deal with\nJDBC port or C/C++ port that uses Informix drivers and now you have to use\nODBC?\n>a monolithic set of API's or a crap load of different API's slicing\n>and dicing the same problems 50 different ways?\nRobert Harley wrote:\n>Unsupported assertion.\nSo, are you saying that there is a standard set of API's for C/C++ for\neverything? (aside to the minimal ANSI stuff). Is there a standard way of\ndealing with C/C++ applications for various domain problems (messaging,\ndatabase persistence, etc.) that rivals Java? I'd like to know if there is\none accepted by everyone who writes C/C++... In that case, I claim\nignorance...\nNot suggesting that Java is the golden hammer.... Just that C/C++ is\noverkill for most things... I even coded in VB... But VB is a true disgrace\nto programming... It's just lame... Java is Object Oriented... (no\nflame-mail from the anti-OO people please... that is a religious\ndiscussion...) and relatively clean... And I don't think that every \"Kid\"\ncan write a well designed Java program. Kids typically don't understand\nvarious design patterns and principles... To my experience, they actually\ntend to think more of the low level problems, wanting to rewrite and\nreinvent the world... a tendency that is much more possible, IMHO, in C/C++\nthan in Java due to existence of standard API's.\n",
    "urls": []
}